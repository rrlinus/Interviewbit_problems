



The gray code is a binary numeral system where two successive values differ in only one bit.

Given a non-negative integer A representing the total number of bits in the code, print the sequence of gray code.

A gray code sequence must begin with 0.



Problem Constraints
1 <= A <= 16



Input Format
First argument is an integer A.



Output Format
Return an array of integers representing the gray code sequence.



Example Input
Input 1:

A = 2
Input 1:

A = 1


Example Output
output 1:

[0, 1, 3, 2]
output 2:

[0, 1]


Example Explanation
Explanation 1:

for A = 2 the gray code sequence is:
    00 - 0
    01 - 1
    11 - 3
    10 - 2
So, return [0,1,3,2].
Explanation 1:

for A = 1 the gray code sequence is:
    00 - 0
    01 - 1
So, return [0, 1].













vector<int> Solution::grayCode(int A) {
    // vector<int> v;
    // v.push_back(0);
    // for(int i=0;i<A;i++){
    //     int temp=1<<(i);
    //     int n=v.size();
    //     int j;
    //     for(j=n-1;j>=0;j--){
    //         int x=v[j]^temp;
    //         v.push_back(x);
    //     }
    // }
    // return v;
    // set the left most unset bit let the number be x and if we want to set the left most bit of x. 
    
    vector<int> v;
    v.push_back(0);
    for(int i=1;i<(1<<A);i++){
        v.push_back(v[i-1]^(i&(-i)));
    }
    return v;
}
