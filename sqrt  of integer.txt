Square Root of Integer
Problem Description

Given an integer A.

Compute and return the square root of A.

If A is not a perfect square, return floor(sqrt(A)).

DO NOT USE SQRT FUNCTION FROM STANDARD LIBRARY.



Problem Constraints
0 <= A <= 1010



Input Format
The first and only argument given is the integer A.



Output Format
Return floor(sqrt(A))



Example Input
Input 1:

 11
Input 2:

 9


Example Output
Output 1:

 3
Output 2:

 3


Example Explanation
Explanation:

 When A = 11 , square root of A = 3.316. It is not a perfect square so we return the floor which is 3.

 When A = 9 which is a perfect square of 3, so we return 3.


int Solution::sqrt(int A) {
    long long int start=1,end=A;
    while(start<=end){
        long long int mid=start+(end-start)/2;
        if(mid*mid==A){
            return mid;
        }
        if(mid*mid<A){
            start=mid+1;
        }
        else{
            end=mid-1;
        }
    }
    return end;
}

