Given an array of integers A and an integer B, find and return the maximum value K such that there is no subarray in A of size K with sum of elements greater than B.



Problem Constraints
1 <= |A| <= 100000
1 <= A[i] <= 10^9

1 <= B <= 10^9



Input Format
The first argument given is the integer array A.

The second argument given is integer B.



Output Format
Return the maximum value of K (sub array length).



Example Input
Input 1:

A = [1, 2, 3, 4, 5]
B = 10
Input 2:

A = [5, 17, 100, 11]
B = 130


Example Output
Output 1:

 2
Output 2:

 3


Example Explanation
Explanation 1:

Constraints are satisfied for maximal value of 2.
Explanation 2:

Constraints are satisfied for maximal value of 3.

Apply Binary search on answers.
Time complexity:O(nlogn)

int Solution::solve(vector<int> &a, int B) {
    long long int n=a.size();
    long long int start=0,end=n;
    int i;
    long long int prefix[n+1]={0};
    for(int i=1;i<=n;i++){
        prefix[i]=prefix[i-1]+a[i-1];
    }
    long long int ans=0;
    while(start<=end){
        long long int mid=start+(end-start)/2;
        for(i=mid;i<=n;i++){
            if(prefix[i]-prefix[i-mid]>B){
                break;
            }
        }
        if(i==n+1){
            ans =mid;
            start=mid+1;
        }
        else{
            end=mid-1;
        }
    }
    return ans;
}
