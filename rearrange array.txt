Given an array of integers A of size N that is a permutation of [0, 1, 2, ..., (N-1)].

Rearrange the array such that A[i] = j is changed to A[j] = i for all i and j form 0 to N-1.

Note: Try solving this with O(1) extra space.

vector<int> Solution::solve(vector<int> &A) {
    int n=A.size();
    if(n==0){
        return A;
    }
    //Algorithm:
    /*
       where x is from 0 to n-1 and i is an integer
       
       suppose y=x+i*n
       
       so how can we get the value of i from y.
       :=ans /n;
       ans value of x=ans %n;
    */
    for(int i=0;i<n;i++){
        A[((A[i])%n)] +=(i)*n;
    }
    for(int i=0;i<n;i++){
        A[i]/=n;
    }
    return A;
}