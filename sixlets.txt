SIXLETS
Problem Description

Given a array of integers A of size N and an integer B.

Return number of non-empty subsequences of A of size B having sum <= 1000.



Problem Constraints
1 <= N <= 20

1 <= A[i] <= 1000

1 <= B <= N



Input Format
The first argument given is the integer array A.

The second argument given is the integer B.



Output Format
Return number of subsequences of A of size B having sum <= 1000.



Example Input
Input 1:

    A = [1, 2, 8]
    B = 2
Input 2:

    A = [5, 17, 1000, 11]
    B = 4


Example Output
Output 1:

3
Output 2:

0


Example Explanation
Explanation 1:

 {1, 2}, {1, 8}, {2, 8}
Explanation 1:

 No valid subsequence


int ans=0;
int soln(vector<int> &A,int i,int n,int sum,int k,int B){
    if(k==B and sum<=1000 or k>B){
        ans++;
        return 1;
    }
    if(i>n or sum>1000){
        return 0;
    }
    return soln(A,i+1,n,sum+A[i],k+1,B)+soln(A,i+1,n,sum,k,B);
}
int Solution::solve(vector<int> &A, int B) {
    ans=0;
    soln(A,0,A.size()-1,0,0,B)-1;
    return ans;
}
