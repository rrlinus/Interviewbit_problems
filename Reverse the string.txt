Reverse the String
Problem Description

Given a string A of size N.

Return the string A after reversing the string word by word.

NOTE:

A sequence of non-space characters constitutes a word.
Your reversed string should not contain leading or trailing spaces, even if it is present in the input string.
If there are multiple spaces between words, reduce them to a single space in the reversed string.


Problem Constraints
1 <= N <= 3 * 105



Input Format
The only argument given is string A.



Output Format
Return the string A after reversing the string word by word.



Example Input
Input 1:
    A = "the sky is blue"
Input 2:
    A = "this is ib"  


Example Output
Output 1:
    "blue is sky the"
Output 2:
    "ib is this"    


Example Explanation
Explanation 1:
    We reverse the string word by word so the string becomes "the sky is blue".
Explanation 2:
    We reverse the string word by word so the string becomes "this is ib".

string Solution::solve(string A) {
    char str[A.length()+1];
    strcpy(str,A.c_str());
    char *token=strtok(str," ");
    // cout<<token;
    vector<string> v;
    while(token!=NULL){
        v.push_back(token);
        token=strtok(NULL," ");
    }
    reverse(v.begin(),v.end());
    string ans;
    for(int i=0;i<v.size();i++){
        ans +=v[i];
        if(i<v.size()-1)
        ans +=" ";
    }
    return ans;
}
