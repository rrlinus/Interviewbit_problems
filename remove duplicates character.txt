Remove Duplicate Letters
Given a string A consisting of lowercase English alphabets. Find and return lexicographically smallest string B after removing duplicate letters from A so that every letter appears once and only once.


Input Format

The only argument given is string A.
Output Format

Return lexicographically smallest string B after removing duplicate letters from A.
Constraints

1 <= length of the string <= 200000
A consists of lowercase English alphabets only. 
For Example

Input 1:
    A = "cbacdcbc"
Output 1:
    B = "acdb"

Input 2:
    A = "bcabc"
Output 2:
    B = "abc"



string Solution::solve(string s) {
    string ans;
    int a[256];
    bool f[256]={false};
    memset(a,false,sizeof(a));
    for(int i=0;i<s.length();i++){
        a[s[i]]++;
    }
    stack<char> st;
    for(int i=0;i<s.length();i++){
       if((st.empty() or st.top()<s[i]) and f[s[i]]==false){
           st.push(s[i]);
           f[s[i]]=true;
       }
       else{
           while(!st.empty() and st.top()>s[i] and !f[s[i]] and a[st.top()]>0){
               f[st.top()]=false;;
               st.pop();
           }
           if(!f[s[i]]){
               st.push(s[i]);
               f[s[i]]=true;;
           }
       }
    //   cout<<st.top()<<" ";
       a[s[i]]--;
    }
    while(!st.empty()){
        ans.push_back(st.top());
        st.pop();
    }
    reverse(ans.begin(),ans.end());
    return ans;
}
