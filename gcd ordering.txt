int gcd(int a,int b)
{
    if(a>b)
        return gcd(b,a);
    else if(a==0 && a==b)
        return 0;
    else if(a==0)
        return b;
    else
        return __gcd(a,b);
}

vector<int> solvee(vector<int> &a){
int n;
  n=a.size();
  vector<int> ans;
  assert(n>=1&&n<=100000);
  int i,flag,ps;
        sort(a.begin(),a.end());
        if (n<3){
            for (i=n-1;i>=0;i--)
                 ans.push_back(a[i]);
            return ans;
        }
        else{
            flag=0;
            for (i=2;i<n;i++){
                if(a[i]!=a[i-1]+gcd(a[i-1],a[i-2])){
                    flag=1;
                    ps=i;
                    break;
                }
            }
            if (flag==0){
                if (a[1]==a[0]+gcd(a[0],a[n-1])){
                    ans.push_back(a[n-1]);
                    for(i=0;i<n-1;i++)
                        ans.push_back(a[i]);
                    return ans;
                    }
                else{
                    for(i=0;i<n;i++)
                        ans.push_back(a[i]);
                    return ans;
                    }
                }
            else{
                if (a[1]==a[0]+gcd(a[ps],a[0])){
                    flag=0;
                    for(i=n-1;i>ps+2;i--){
                        if(a[i]!=a[i-1]+gcd(a[i-1],a[i-2])){
                           flag=1;
                           break;
                          }
                        }
                   if (flag==0 and ps<n-1){
                       if (a[ps+1]!=a[ps-1]+gcd(a[ps-1],a[ps-2]))
                           flag=1;
                   }
                   if (flag==0 and ps<n-2){
                       if (a[ps+2]!=a[ps+1]+gcd(a[ps-1],a[ps+1]))
                           flag=1;
                   }
                 if (flag==0){
                     ans.push_back(a[ps]);
                  for(i=0;i<n;i++)
                      if(i!=ps)
                     ans.push_back(a[i]);
                  return ans;
                 }
                }
              }
          }
        ans.push_back(-1);
        return ans;
}
vector<int> Solution::solve(vector<int> &A) {
    return solvee(A);
}
