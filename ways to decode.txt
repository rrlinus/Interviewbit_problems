Ways to Decode
Problem Description

A message containing letters from A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
Given an encoded message denoted by string A containing digits, determine the total number of ways to decode it modulo 109 + 7.

.



Problem Constraints
1 <= length(A) <= 105



Input Format
The first and the only argument is a string A.



Output Format
Return an integer, representing the number of ways to decode the string modulo 109 + 7..



Example Input
Input 1:

 A = "12"
Input 2:

 A = "8"


Example Output
Output 1:

 2
Output 2:

 1


Example Explanation
Explanation 1:

 Given encoded message "8", it could be decoded as only "H" (8).
 The number of ways decoding "8" is 1.
Explanation 2:

 Given encoded message "12", it could be decoded as "AB" (1, 2) or "L" (12).
 The number of ways decoding "12" is 2.


#define M 1000000007
int Solution::numDecodings(string A) {
    int n=A.length();
    int dp[n]={0};
    if(A[0]!='0')
      dp[0]=1;
    if(n==1){
        return dp[n-1];
    }
    if((A[1]-'0')+(A[0]-'0')*10<=26 and (A[1]-'0')+(A[0]-'0')*10>=10)
    dp[1]=1;
    if(A[1]!='0')
    dp[1] +=dp[0];
    for(int i=2;i<n;i++){
        if((A[i]-'0')+(A[i-1]-'0')*10<=26 and (A[i]-'0')+(A[i-1]-'0')*10>=10)
          dp[i] =(dp[i]+dp[i-2])%M;
        if(A[i]!='0')
          dp[i] =(dp[i]+dp[i-1])%M;
    }
    return dp[n-1]%M;
}
