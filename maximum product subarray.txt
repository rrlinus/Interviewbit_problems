Max Product Subarray
Problem Description

Given an integer array A of size N. Find the contiguous subarray within the given array (containing at least one number) which has the largest product.

Return an integer corresponding to the maximum product possible.

NOTE: Answer will fit in 32-bit integer value.



Problem Constraints
1 <= N <= 5 * 105

-100 <= A[i] <= 100



Input Format
First and only argument is an integer array A.



Output Format
Return an integer corresponding to the maximum product possible.



Example Input
Input 1:

 A = [4, 2, -5, 1]
Input 2:

 A = [-3, 0, -5, 0]


Example Output
Output 1:

 8
Output 2:

 0


Example Explanation
Explanation 1:

 We can choose the subarray [4, 2] such that the maximum product is 8.
Explanation 2:

 0 will be the maximum product possible.



int Solution::maxProduct(const vector<int> &A) {
    int n=A.size();
    int curr_pos=1;
    int curr_neg=1;
    int ans=INT_MIN;
    for(int i=0;i<n;i++){
        curr_pos=curr_pos*A[i];
        curr_neg=curr_neg*A[i];
        if(curr_neg>curr_pos){
            swap(curr_pos,curr_neg);
        }
        ans=max(ans,curr_pos);
        if(curr_pos<=0){
            curr_pos=1;
        }
        if(curr_neg>=0){
            curr_neg=1;
        }
        
    }
    return ans;
}
